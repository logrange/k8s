#!/usr/bin/env bash

function cleanup {
    echo "Cleaning up..."
    rm -rf ${TMP_PATH}
}

function check {
    code=$1;
    if [[ ${code} -ne 0 ]]; then
        echo "ERROR!"
        exit ${code}
    fi
}

################# Main #################

TMP_PATH=$(mktemp -d)
trap cleanup EXIT

CUR_PATH=$(pwd)
LGR_PATH=${TMP_PATH}/src/github.com/logrange

BRANCH=$1
if [[ -z ${BRANCH} ]]; then
    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    check $?
fi

echo "Creating tmp sources folder '${LGR_PATH}'..."
mkdir -p ${LGR_PATH}
check $?

cd ${LGR_PATH}
echo "Cloning git branch '${BRANCH}' to '${LGR_PATH}/logrange'..."
git clone -b ${BRANCH} git@github.com:logrange/logrange.git >> /dev/null 2>&1
check $?

echo "Cloning git branch '${BRANCH}' to '${LGR_PATH}/gravity'..."
git clone -b ${BRANCH} git@github.com:logrange/gravity.git >> /dev/null 2>&1
check $?

cd ${LGR_PATH}/logrange
env GOPATH=${TMP_PATH} go get -d -u ./... >> /dev/null 2>&1
check $?

cd ${LGR_PATH}/gravity
env GOPATH=${TMP_PATH} go get -d -u ./... >> /dev/null 2>&1
check $?

echo "Building binaries to ${CUR_PATH}/binaries..."
mkdir -p ${CUR_PATH}/binaries
check $?

ARCH="amd64"
for OS in "linux" "darwin"
do
    cd ${CUR_PATH}/binaries
    mkdir -p ${OS}/x86_64
    check $?

    cd ${OS}/x86_64
    for path_cmd in "${LGR_PATH}/logrange/cmd:logrange" "${LGR_PATH}/logrange/cmd:lr" "${LGR_PATH}/gravity/cmd:gravity"
    do
        a=(${path_cmd//:// })
        p=${a[0]}
        c=${a[1]}

        echo "Building cmd=${c}, os=${OS}, arch=${ARCH}..."
        env GOPATH=${TMP_PATH} GOOS=${OS} GOARCH=${ARCH} \
            go build -o ./${c} "${p}${c}"
        check $?
    done
done
