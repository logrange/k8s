#!/usr/bin/env bash

function check {
    code=$1;
    if [[ ${code} -ne 0 ]]; then
        echo "ERROR!"
        exit ${code}
    fi
}

function get_labeled_node() {
    label=$1
    kubectl get nodes --output=json --selector=${label} | jq -r '.items[0].metadata.name'
}

function add_node_label() {
    node=$1
    label=$2
    kubectl label nodes ${node} ${label}= >/dev/nul
}

function del_node_label() {
    node=$1
    label=$2
    kubectl label nodes ${node} ${label}- >/dev/nul
}

################# Main #################

while [[ "$1" != "" ]]; do
    case $1 in
        -i|--install)
            MODE=1
            ;;
        -v|--version)
            shift
            VERSION=$1
            ;;
        -u|--uninstall)
            MODE=2
            ;;
        -c|--wipe)
            WIPE=true
            ;;
        *)
            echo "Unknown argument passed!"
            exit 1
            ;;
    esac
    shift
done

if [[ -z ${MODE} ]]; then
    MODE=1
fi

if [[ ${MODE} -eq 1 ]] && [[ -z ${VERSION} ]]; then
    echo "Error: version must be provided e.g. '--version v0.0.4'"
    exit 1
fi

if [[ ${MODE} -eq 1 ]] && [[ "${WIPE}" ]]; then
    echo "Error: --wipe can be used with --uninstall only!"
    exit 1
fi

LGR_LABEL="logrange.io/node"
LGR_CONFS="lr-configs"
LGR_COMPS="lr-aggregator lr-collector lr-forwarder"

echo "Checking helm..."
helm init --client-only >/dev/null
check $?

echo "Checking kubectl..."
kubectl cluster-info >/dev/null
check $?

### install
if [[ ${MODE} -eq 1 ]]; then
    echo "Adding helm repo..."
    out=$(helm repo add logrange http://get.logrange.io/k8s/helm/ && helm repo update)
    check $?

    node=$(get_labeled_node ${LGR_LABEL})
    check $?

    if [[ ${node} != "null" ]]; then
       echo "Using node=${node} with ${LGR_LABEL} label..."
    else
        node=$(get_labeled_node)
        check $?
        if [[ ${node} != "null" ]]; then
            echo "Adding ${LGR_LABEL} label to node=${node}..."
            add_node_label ${node} ${LGR_LABEL}
            check $?
        fi
    fi

    COMPS="${LGR_CONFS} ${LGR_COMPS}";
    for comp in ${COMPS}; do
        echo "Installing ${comp} ${VERSION}..."
        helm status ${comp} >/dev/null 2>&1
        if [[ $? -eq 0 ]]; then
            echo "Already installed, skipping..."
            continue
        fi
        helm install logrange/${comp} --name ${comp} --set args.version=${VERSION} >/dev/null
        check $?
    done

### remove
else

    COMPS="${LGR_COMPS}";
    if [[ "${WIPE}" == true ]]; then
        COMPS="${COMPS} ${LGR_CONFS}";
        node=$(get_labeled_node ${LGR_LABEL})
        check $?
        if [[ ${node} != "null" ]]; then
            echo "Removing ${LGR_LABEL} label from node=${node}..."
            del_node_label ${node} ${LGR_LABEL}
            check $?
        fi
    fi

    for comp in ${COMPS}; do
        echo "Uninstalling ${comp}..."
        helm status ${comp} >/dev/null 2>&1
        if [[ $? -ne 0 ]]; then
            echo "Not found, skipping..."
            continue
        fi
        helm delete --purge ${comp} >/dev/null
        check $?
    done
fi

echo "Done!"