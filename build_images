#!/usr/bin/env bash

function cleanup {
    echo "Cleaning up..."
    rm -rf ${TMP_PATH}
}

function check {
    code=$1;
    if [[ ${code} -ne 0 ]]; then
        echo "ERROR!"
        exit ${code}
    fi
}

################# Main #################

TMP_PATH=$(mktemp -d)
trap cleanup EXIT

CUR_PATH=$(pwd)
BRANCH=$1
if [[ -z ${BRANCH} ]]; then
    BRANCH="master"
fi

BLD_SCPT="${CUR_PATH}/build_binaries"
cd ${TMP_PATH}

echo "Building binaries..."
chmod +x ${BLD_SCPT} && ${BLD_SCPT}  ${BRANCH}
check $?

VERSION=${BRANCH}
if [[ ${VERSION} == "master" ]]; then
    VERSION="latest"
fi

echo "Building docker images..."
for name_binary in "collector/lr" "forwarder/lr" "logrange/logrange" "gravity/gravity"
do
    a=(${name_binary//\// })
    n=${a[0]}
    b=${a[1]}

    cp ${TMP_PATH}/binaries/linux/x86_64/${b} ${CUR_PATH}/images/${n}
    check $?

    cd ${CUR_PATH}/images/${n}
    check $?

    image=logrange/${n}:${VERSION}
    echo "Building and pushing docker image '${image}'..."

    docker build -t ${image} . >> /dev/null 2>&1 && docker push ${image} >> /dev/null 2>&1
    check $?

    rm -f ${CUR_PATH}/images/${n}/${b}
    check $?
done

echo "Updating helm repository..."
cd ${CUR_PATH}/charts/_repo/

helm package ../lr-configs --save=false
check $?

helm package ../lr-aggregator --save=false
check $?

helm package ../lr-collector --save=false
check $?

helm package ../lr-forwarder --save=false
check $?

helm package ../lr-gravity --save=false
check $?

helm repo index .
check $?
