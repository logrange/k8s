apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "gravity.name" . }}
  namespace: kube-system
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ template "gravity.name" . }}
data:
  adapter.json: |
    {
      "Gravity": {
        "ApiListenAddr": "0.0.0.0:8083",
        "Kubernetes": {
          "Namespace": "kube-system",
          "ForwarderConfigMapName": "log-forwarders"
        }
      },

      "Logrange": {
        "PipeName": "logrange.pipe=__default__",
        "ForwarderTmplFile": "/opt/logrange/gravity/config/forward-tmpl.json",
        "Kubernetes": {
          "Namespace": "kube-system",
          "ForwarderConfigMap": "lr-forwarder"
        },
        "Transport": {
          "ListenAddr": "lr-aggregator.kube-system.svc.cluster.local:9966",
          "TlsEnabled": false,
          "Tls2Way": false,
          "TlsCertFile": "/opt/logrange/gravity/config/tls/client.crt",
          "TlsKeyFile": "/opt/logrange/gravity/config/tls/client.key",
          "TlsCAFile": "/opt/logrange/gravity/config/tls/ca.pem"
        }
      },

      "SyncIntervalSec": 5
    }

  forward-tmpl.json: |
    {
      "Name": "",
      "Pipe": {
        "Name": "logrange.pipe=__default__"
      },
      "Sink": {
        "Type": "syslog",
        "Params": {
          "Protocol": "tcp",
          "RemoteAddr": "",
          "TlsCAFile": "",
          "MessageSchema" : {
            "Facility": "local6",
            "Severity": "info",
            "Hostname": "lr-forwarder",
            "Tags": "{vars:pod}_{vars:ns}_{vars:cname}-{vars:cid}.log",
            "Msg": "{\"time\":\"{ts.format(2006-01-02T15:04:05.999999Z07:00)}\"}, \"stream\":\"{vars:stream}\", \"log\":{msg.json()}}"
          }
        }
      }
    }

  log4g.properties: |
    # Console appender
    appender.console.type=log4g/consoleAppender
    appender.console.layout=[%d{01-02 15:04:05.000}] %p %c%i: %m
    # async - defines whether the writing message is blocking operation or not. It is blocked by default
    appender.console.async=false

    # File appender
    appender.file.type=log4g/fileAppender
    appender.file.layout=[%d{01-02 15:04:05.000}] %p %c%i: %m
    appender.file.fileName=console.log
    # append parameter defines that new lines will be added to the log file if it already exists or previous context will be lost
    appender.file.append=true
    # maxFileSize limits the maximum file size (see rotate parameter). The value can be specified as 10M, 2Gib etc.
    appender.file.maxFileSize=1Gib
    # the maximum size all log chunks can get
    appender.file.maxDiskSpace=3Gib
    # maxLines limits maximum number of lines written to the file
    #appender.file.maxLines=2000
    # rotate defines file rotation policy:
    # "none" - no rotation will happen, the log file will grow with no limits
    # "size" - logging message will be written to new file, if file size or number of lines exceeds maximum values
    # "daily" - same like "size" + new file is created on daily basis even if limits are not reached.
    appender.file.rotate=daily

    # Logger Context for root logger name
    context.appenders=console
    # buffer specifies the size of channel (Log events) between loggers and appenders
    # if buffer set to 0 and context.blocking=true then context will send to all appenders
    # synchronously without using channel for this
    context.buffer=0
    # blocking specifies the context behaviour in case of the event channel is full.
    # if it is true (default value) then the logger call will be blocked until it can put log event to the channel.
    # if it is false, logger will not blocked, but the log event will be lost if the channel is full.
    context.blocking=true
    # level specifies log level for the context log name (root in this case)
    context.level=INFO

    # this context defined for "a.b" logger name will send log events to 2 appenders
    #context.a.b.appenders=console,file

    # level - specifies log level for the logger name "a.b.c.d"
    #logger.a.b.c.d.level=TRACE
